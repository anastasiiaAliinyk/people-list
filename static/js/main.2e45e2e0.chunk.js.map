{"version":3,"sources":["UsersList.js","AddComment.js","CommentsList.js","api.js","App.js","index.js"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","cursor","headers","name","options","align","UsersList","people","addComment","showComments","classes","TableContainer","component","Paper","Table","aria-label","TableHead","map","header","TableBody","person","birth_year","className","titleAccess","onClick","created","style","marginLeft","DialogTitle","margin","padding","spacing","closeButton","position","right","top","grey","props","children","onClose","other","disableTypography","Typography","variant","IconButton","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","AddComment","isOpen","onSave","useState","open","setOpen","comment","setComment","useEffect","handleClose","Dialog","aria-labelledby","dividers","gutterBottom","rows","cols","value","onChange","event","target","required","Button","autoFocus","disabled","minWidth","CommentsList","comments","selectedUserName","id","defaultProps","request","url","a","fetch","response","ok","Error","json","results","text","display","justifyContent","App","setPeople","isOpenCommentWindow","setIsOpenCommentWindow","isOpenCommenstWindow","setIsOpenCommenstWindow","selectedUserId","setSelectedUserId","key","initialValue","item","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","console","warn","useLocalStorage","setComments","then","useMemo","find","CircularProgress","Container","maxWidth","userId","ReactDOM","render","document","getElementById"],"mappings":"qXAaMA,EAAkBC,aAAW,SAACC,GAAD,MAAY,CAC7CC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,OAAOC,MACtCC,MAAON,EAAMG,QAAQC,OAAOG,OAE9BC,KAAM,CACJC,SAAU,OANUV,CAQpBW,KAEEC,EAAiBZ,aAAW,SAACC,GAAD,MAAY,CAC5CY,KAAM,CACJ,qBAAsB,CACpBV,gBAAiBF,EAAMG,QAAQU,OAAOC,WAHrBf,CAMnBgB,KAEEC,EAAYC,aAAW,iBAAO,CAClCL,KAAM,CACJ,UAAW,CACTM,OAAQ,gBAKRC,EAAU,CACd,CAACC,KAAM,QACP,CAACA,KAAM,YACP,CAACA,KAAM,UAAWC,QAAS,CAACC,MAAO,WAGxBC,EAAY,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACxCC,EAAUX,IAEhB,OACE,cAACY,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,aAAW,eAAlB,UACE,cAACC,EAAA,EAAD,UACE,cAAClB,EAAA,EAAD,UACGI,EAAQe,KAAI,SAAAC,GAAM,OACjB,cAACrC,EAAD,2BAAuCqC,EAAOd,SAAW,IAAzD,aACGc,EAAOf,OADYe,EAAOf,aAMnC,cAACgB,EAAA,EAAD,UACGZ,EAAOU,KAAI,SAACG,GAAD,OACV,eAAC1B,EAAD,WACE,cAACb,EAAD,UACGuC,EAAOjB,OAEV,cAACtB,EAAD,UACGuC,EAAOC,aAEV,eAACxC,EAAD,CAAiBwB,MAAM,QAAvB,UACE,cAAC,IAAD,CACEiB,UAAWZ,EAAQf,KACnB4B,YAAY,oBACZC,QAAS,kBAAMf,EAAaW,EAAOK,YAErC,cAAC,IAAD,CACEH,UAAWZ,EAAQf,KACnB+B,MAAO,CAACC,WAAY,QACpBJ,YAAY,kBACZC,QAAS,kBAAMhB,EAAWY,EAAOK,iBAjBlBL,EAAOjB,iB,sFCrClCyB,EAAc9C,aAbL,SAACC,GAAD,MAAY,CACzBY,KAAM,CACJkC,OAAQ,EACRC,QAAS/C,EAAMgD,QAAQ,IAEzBC,YAAa,CACXC,SAAU,WACVC,MAAOnD,EAAMgD,QAAQ,GACrBI,IAAKpD,EAAMgD,QAAQ,GACnB1C,MAAON,EAAMG,QAAQkD,KAAK,SAIVtD,EAAmB,SAACuD,GACtC,IAAQC,EAAyCD,EAAzCC,SAAU5B,EAA+B2B,EAA/B3B,QAAS6B,EAAsBF,EAAtBE,QAAYC,EAAvC,YAAiDH,EAAjD,kCACA,OACE,eAAC,IAAD,yBAAgBI,mBAAiB,EAACnB,UAAWZ,EAAQf,MAAU6C,GAA/D,cACE,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BL,IACzBC,EACC,cAACK,EAAA,EAAD,CAAY7B,aAAW,QAAQO,UAAWZ,EAAQsB,YAAaR,QAASe,EAAxE,SACE,cAAC,IAAD,MAEA,YAKJM,EAAgB/D,aAAW,SAACC,GAAD,MAAY,CAC3CY,KAAM,CACJmC,QAAS/C,EAAMgD,QAAQ,OAFLjD,CAIlBgE,KAEEC,EAAgBjE,aAAW,SAACC,GAAD,MAAY,CAC3CY,KAAM,CACJkC,OAAQ,EACRC,QAAS/C,EAAMgD,QAAQ,OAHLjD,CAKlBkE,KAESC,EAAa,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQX,EAAsB,EAAtBA,QAASY,EAAa,EAAbA,OAC5C,EAAwBC,mBAASF,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRH,EAAQJ,KACP,CAACA,IAEJ,IAAMQ,EAAc,WAClBJ,GAAQ,GACRE,EAAW,IACXjB,KAcF,OACE,8BACE,eAACoB,EAAA,EAAD,CAAQpB,QAASmB,EAAaE,kBAAgB,0BAA0BP,KAAMA,EAA9E,UACE,cAAC,EAAD,CAAad,QAASmB,EAAtB,6BAGA,cAAC,EAAD,CAAeG,UAAQ,EAAvB,SACE,cAACnB,EAAA,EAAD,CAAYoB,cAAY,EAAxB,SACE,0BACEC,KAAK,KACLC,KAAK,KACLC,MAAOV,EACPW,SAvBW,SAACC,GACtBX,EAAWW,EAAMC,OAAOH,QAuBdI,UAAQ,QAId,cAAC,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,WAAS,EAAC/C,QAzBL,WACnB8B,GAAQ,GACRH,EAAOI,GACPC,EAAW,IACXjB,KAqB+ClD,MAAM,UAAUmF,UAAWjB,EAApE,kCCvEJ3B,EAAc9C,aAdL,SAACC,GAAD,MAAY,CACzBY,KAAM,CACJkC,OAAQ,EACRC,QAAS/C,EAAMgD,QAAQ,GACvB0C,SAAU,QAEZzC,YAAa,CACXC,SAAU,WACVC,MAAOnD,EAAMgD,QAAQ,GACrBI,IAAKpD,EAAMgD,QAAQ,GACnB1C,MAAON,EAAMG,QAAQkD,KAAK,SAIVtD,EAAmB,SAACuD,GACtC,IAAQC,EAAyCD,EAAzCC,SAAU5B,EAA+B2B,EAA/B3B,QAAS6B,EAAsBF,EAAtBE,QAAYC,EAAvC,YAAiDH,EAAjD,kCACA,OACE,eAAC,IAAD,yBAAgBI,mBAAiB,EAACnB,UAAWZ,EAAQf,MAAU6C,GAA/D,cACE,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BL,IACzBC,EACC,cAACK,EAAA,EAAD,CAAY7B,aAAW,QAAQO,UAAWZ,EAAQsB,YAAaR,QAASe,EAAxE,SACE,cAAC,IAAD,MAEA,YAKJM,EAAgB/D,aAAW,SAACC,GAAD,MAAY,CAC3CY,KAAM,CACJmC,QAAS/C,EAAMgD,QAAQ,OAFLjD,CAIlBgE,KAES4B,EAAe,SAAC,GAKtB,IAJLxB,EAII,EAJJA,OACAX,EAGI,EAHJA,QACAoC,EAEI,EAFJA,SACAC,EACI,EADJA,iBAEA,EAAwBxB,mBAASF,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEAG,qBAAU,WACRH,EAAQJ,KACP,CAACA,IAEJ,IAAMQ,EAAc,WAClBJ,GAAQ,GACRf,KAGF,OACE,eAACoB,EAAA,EAAD,CAAQpB,QAASmB,EAAaE,kBAAgB,0BAA0BP,KAAMA,EAA9E,UACE,eAAC,EAAD,CAAawB,GAAG,0BAA0BtC,QAASmB,EAAnD,2BACiBkB,EADjB,OAGA,eAAC,EAAD,CAAef,UAAQ,EAAvB,UACGc,GAAYA,EAAS1D,KAAI,SAACsC,EAASsB,GAAV,OACxB,cAACnC,EAAA,EAAD,CAAYoB,cAAY,EAAxB,SACGP,GAD2BsB,EAAK,OAInCF,GACA,cAACjC,EAAA,EAAD,wCASVgC,EAAaI,aAAe,CAC1BH,SAAU,KACVC,iBAAkB,M,6BClFPG,EAAO,uCAAG,WAAMC,EAAK5E,GAAX,iBAAA6E,EAAA,sEACEC,MAAM,GAAD,OAHN,yBAGM,OAAeF,GAAO5E,GAD7B,WACf+E,EADe,QAGPC,GAHO,sBAIb,IAAIC,MAAJ,8BAAiCL,IAJpB,gCAQEG,EAASG,OARX,cAQb/E,EARa,yBASZA,EAAOgF,SATK,2DAWZJ,EAASK,QAXG,0DAAH,wDCSdzF,EAAYC,aAAW,iBAAO,CAClCL,KAAM,CACJ8F,QAAS,OACTC,eAAgB,cAgGLC,MArEf,WACE,MAA4BvC,mBAAS,MAArC,mBAAO7C,EAAP,KAAeqF,EAAf,KACA,EAAsDxC,oBAAS,GAA/D,mBAAOyC,EAAP,KAA4BC,EAA5B,KACA,EAAwD1C,oBAAS,GAAjE,mBAAO2C,EAAP,KAA6BC,EAA7B,KACA,EAA4C5C,mBAAS,MAArD,mBAAO6C,EAAP,KAAuBC,EAAvB,KACA,EA5BF,SAAyBC,EAAKC,GAC5B,MAAsChD,oBAAS,WAC7C,IACE,IAAMiD,EAAOC,aAAaC,QAAQJ,GAClC,OAAOE,EAAOG,KAAKC,MAAMJ,GAAQD,EACjC,MAAOM,GACP,OAAON,MALX,mBAAOO,EAAP,KAAoBC,EAApB,KAmBA,MAAO,CAACD,EAVS,SAAC1C,GAChB,IACE,IAAM4C,EACJ5C,aAAiB6C,SAAW7C,EAAM0C,GAAe1C,EACnDqC,aAAaS,QAAQZ,EAAKK,KAAKQ,UAAUH,IACzCD,EAAeC,GACf,MAAOH,GACPO,QAAQC,KAAKR,MAWeS,CAAgB,WAAY,IAA5D,mBAAOxC,EAAP,KAAiByC,EAAjB,KAEA3D,qBAAU,WD/BmBsB,EAAQ,WCiChCsC,KAAKzB,KACP,IAEH,IAAMhB,EAAmB0C,mBAAQ,WAC/B,GAAuB,OAAnBrB,EAIJ,OAAO1F,EAAOgH,MAAK,SAAAnG,GAAM,OAAIA,EAAOK,UAAYwE,KAAgB9F,OAC/D,CAACI,EAAQ0F,IAmBNvF,EAAUX,IAEhB,OAAe,OAAXQ,EAEA,qBAAKe,UAAWZ,EAAQf,KAAxB,SACE,cAAC6H,EAAA,EAAD,MAMJ,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAAC,EAAD,CACEnH,OAAQA,EACRC,WA/BgB,SAACmH,GACrB7B,GAAuB,GACvBI,EAAkByB,IA8BdlH,aA3BiB,SAACkH,GACtB3B,GAAwB,GACxBE,EAAkByB,MA2BhB,cAAC,EAAD,CACEzE,OAAQ2C,EACRtD,QAAS,kBAAMuD,GAAuB,IACtC3C,OA3Bc,SAACI,GACnB6D,GAAY,SAAAzC,GAAQ,kCACfA,GADe,kBAEjBsB,EAFiB,sBAEItB,EAASsB,IAAmB,IAFhC,CAEoC1C,YA0BtD,cAAC,EAAD,CACEL,OAAQ6C,EACRxD,QAAS,kBAAMyD,GAAwB,IACvCrB,SAAUA,EAASsB,GACnBrB,iBAAkBA,QCnG1BgD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2e45e2e0.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport MessageIcon from '@material-ui/icons/Message';\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    '&:hover': {\n      cursor: 'pointer',\n    }\n  }\n}));\n\nconst headers = [\n  {name: 'Name'},\n  {name: 'BirthDay'},\n  {name: 'Actions', options: {align: 'right'}}\n];\n\nexport const UsersList = ({ people, addComment, showComments }) => {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"people table\">\n        <TableHead>\n          <TableRow>\n            {headers.map(header => (\n              <StyledTableCell key={header.name} {...header.options || {}}>\n                {header.name}\n              </StyledTableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {people.map((person) => (\n            <StyledTableRow key={person.name}>\n              <StyledTableCell>\n                {person.name}\n              </StyledTableCell>\n              <StyledTableCell>\n                {person.birth_year}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">\n                <VisibilityIcon \n                  className={classes.root} \n                  titleAccess=\"Show all comments\" \n                  onClick={() => showComments(person.created)}\n                />\n                <MessageIcon \n                  className={classes.root} \n                  style={{marginLeft: '15px'}} \n                  titleAccess=\"Add new comment\"\n                  onClick={() => addComment(person.created)}\n                />\n              </StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nUsersList.propTypes = {\n  addComment: PropTypes.func.isRequired,\n  showComments: PropTypes.func.isRequired, \n  people: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      birth_year: PropTypes.string.isRequired,\n      created: PropTypes.string.isRequired,\n    })\n  ),\n}\n","import { useEffect, useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport const AddComment = ({ isOpen, onClose, onSave }) => {\n  const [open, setOpen] = useState(isOpen);\n  const [comment, setComment] = useState('');\n\n  useEffect(() => {\n    setOpen(isOpen)\n  }, [isOpen]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setComment('');\n    onClose();\n  };\n\n  const handleOnChange = (event) => {\n    setComment(event.target.value);\n  }\n\n  const handleOnSave = () => {\n    setOpen(false);\n    onSave(comment);\n    setComment('');\n    onClose();\n  }\n\n  return (\n    <div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle onClose={handleClose}>\n          Add new comment\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            <textarea\n              rows=\"10\" \n              cols=\"40\" \n              value={comment}\n              onChange={handleOnChange}\n              required\n            />\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleOnSave} color=\"primary\" disabled={!comment}>\n            Save changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nAddComment.propTypes = {\n  isOpen: PropTypes.bool.isRequired, \n  onClose: PropTypes.func.isRequired, \n  onSave: PropTypes.func.isRequired, \n}\n","import { useState, useEffect }from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n    minWidth: '50vw',\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nexport const CommentsList = ({ \n  isOpen, \n  onClose, \n  comments, \n  selectedUserName \n}) => {\n  const [open, setOpen] = useState(isOpen);\n\n  useEffect(() => {\n    setOpen(isOpen)\n  }, [isOpen]);\n\n  const handleClose = () => {\n    setOpen(false);\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        All comments ({selectedUserName})\n      </DialogTitle>\n      <DialogContent dividers>\n        {comments && comments.map((comment, id) => (\n          <Typography gutterBottom key={id + 1}>\n            {comment}\n          </Typography>\n        ))}\n        {!comments && (\n          <Typography>\n            No comments yet...\n          </Typography>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nCommentsList.defaultProps = {\n  comments: null,\n  selectedUserName: null,\n}\n\nCommentsList.propTypes = {\n  isOpen: PropTypes.bool.isRequired, \n  onClose: PropTypes.func.isRequired, \n  comments: PropTypes.arrayOf(PropTypes.string),\n  selectedUserName: PropTypes.string, \n}\n","export const BASE_URL = 'https://swapi.dev/api';\n\nexport const request = async(url, options) => {\n  const response = await fetch(`${BASE_URL}${url}`, options);\n\n  if (!response.ok) {\n    throw new Error(`Failed to load data ${url}`);\n  }\n\n  try {\n    const people = await response.json();\n    return people.results;\n  } catch {\n    return response.text();\n  }\n};\n\nexport const getPeople = () => request('/people');\n","import { useEffect, useMemo, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './App.css';\nimport { UsersList } from './UsersList.js';\nimport { AddComment } from './AddComment.js';\nimport { CommentsList } from './CommentsList.js';\nimport { getPeople } from './api.js';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n  }\n}));\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n \n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      localStorage.setItem(key, JSON.stringify(valueToStore));\n      setStoredValue(valueToStore);\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n  return [storedValue, setValue];\n};\n\nfunction App() {\n  const [people, setPeople] = useState(null);\n  const [isOpenCommentWindow, setIsOpenCommentWindow] = useState(false);\n  const [isOpenCommenstWindow, setIsOpenCommenstWindow] = useState(false);\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [comments, setComments] = useLocalStorage('comments', {});\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople);\n  }, []);\n\n  const selectedUserName = useMemo(() => {\n    if (selectedUserId === null) {\n      return;\n    }\n\n    return people.find(person => person.created === selectedUserId).name;\n  }, [people, selectedUserId]);\n\n  const onOpenComment = (userId) => {\n    setIsOpenCommentWindow(true);\n    setSelectedUserId(userId);\n  };\n\n  const onOpenComments = (userId) => {\n    setIsOpenCommenstWindow(true);\n    setSelectedUserId(userId);\n  };\n\n  const saveComment = (comment) => {\n    setComments(comments => ({\n      ...comments,\n      [selectedUserId]: [...comments[selectedUserId] || [], comment],\n    })\n  )};\n\n  const classes = useStyles();\n\n  if (people === null) {\n    return (\n      <div className={classes.root}>\n        <CircularProgress />\n      </div>\n    )\n  } \n\n  return (\n    <Container maxWidth=\"md\">\n      <UsersList \n        people={people} \n        addComment={onOpenComment}\n        showComments={onOpenComments} \n      />\n      <AddComment \n        isOpen={isOpenCommentWindow} \n        onClose={() => setIsOpenCommentWindow(false)} \n        onSave={saveComment}\n      />\n      <CommentsList \n        isOpen={isOpenCommenstWindow}\n        onClose={() => setIsOpenCommenstWindow(false)} \n        comments={comments[selectedUserId]}\n        selectedUserName={selectedUserName}\n      /> \n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}